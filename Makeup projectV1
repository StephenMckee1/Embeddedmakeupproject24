#include <C8051F020.h>

void echo()
{
   WDTCN = 0xde;  // disable watchdog
   WDTCN = 0xad;
   XBR2 = 0x40;   // enable port output
   XBR0 = 4;      // enable uart 0
   OSCXCN = 0x67; // turn on external crystal
   TMOD = 0x20;   // wait 1ms using T1 mode 2
   TH1 = -167;    // 2MHz clock, 167 counts - 1ms
   TR1 = 1;
   while ( TF1 == 0 ) { }          // wait 1ms
   while ( !(OSCXCN & 0x80) ) { }  // wait till oscillator stable
   OSCICN = 8;    // switch over to 22.1184MHz
   SCON0 = 0x50;  // 8-bit, variable baud, receive enable
   TH1 = -6;      // 9600 baud
   for ( ; ; )
   {
      // wait for data to arrive
      if ( !RI0 ) continue;
      // clear the receiver flag & echo the data
      RI0 = 0;
      SBUF0 = SBUF0;
   }
}
///////////////////////////////////////////////////////////////////////////////
//Sending and Reciving Data 

void SerTX
void SerRX
unsigned char Startmess1[]= "please input a number";
unsigned char Startmessfail=[]"please input a valid number";

void Serial(void)
	{
	TMOD =0x20; //timer 1 8bitauto reload 1 stop 
	TH1 = 0xfd;
	scon =0x50;
	TR1 =1;
	while(1)
	{
	SerTX('
#define op = add|sub|divide|multiply
//Calculator 4 function Add sub divide times
unsigned int  value1,value2;
unsigned char  keystroke; 
unsigned int  answer;
unsigned char  add;
unsigned char  sub;
unsigned char  divide;
unsigned char  multiply;
unsigned int  add_result;
unsigned int  sub_result;
unsigned int  divide_result;
unsigned int  multiply_result;



//input number 
 int[] 


// calculator section 

aquisition(){

   do
    {
        check_op()
    } while (/*  */);
    (keystroke !=int)
}
check_op(){
    if(keystroke = op)//checks if one of the op codes was selected first 
        printf("Please input a number.")
        keystroke = return;//check if kosher using that return
    else if(keystroke = int) //stores in value grabbed from keystroke PROBLEM:second value like 5 then 6 should make an array.
        keystroke = value1;
    while(keystroke = op && value1 !=0)
    switch (op){   
		case op = '+'
            value1 + keystroke = add;
        case op = '-'
          value - keystroke = sub;
        case op = '*'
          value * keystroke = multiply;
        case '/':
          value / keystroke = divide;
		  break;
		default:
			notvalid()
			break;
		  }
            
}
void notvalid(void){
    if(keystroke != int) // if
        printf("this function requires a number")
    else if (value = int && keystroke = 0)
        printf("ERROR! divide by zero")
    else if (answer > 0x7FFFFF) // Max value is 32 bit
	{
        printf"ERROR!! this is too big"
    }   
    return;
            
    }
    


}


void main(){


}